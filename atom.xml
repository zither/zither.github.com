<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title><![CDATA[MiniThinker]]></title>
	<subtitle>努力学习那些想要知道的东西</subtitle>
	<link href="http://blog.minimee.org/atom.xml" rel="self" />
	<link href="http://blog.minimee.org/" />
	<id>urn:uuid:6b18cbf9-83ff-86cd-1c01-f6fa3c1a351c</id>
	<updated>2014-08-29T16:35:53+08:00</updated>
	<author>
		<name><![CDATA[Minimee]]></name>
		<uri>http://blog.minimee.org/</uri>
	</author>
	<entry>
		<title type="html"><![CDATA[尘埃开发记录之战斗数据结构]]></title>
		<link href="http://blog.minimee.org/article/2014/08/29/data-structure-of-battle" />
		<id>urn:uuid:90430ed8-749e-1be8-3e31-7955da0ba32f</id>
		<updated>2014-08-29T15:51:02+08:00</updated>
		<summary type="html"><![CDATA[&lt;p&gt;前面的日志中已经说过，尘埃现在采用的是自动回合制的战斗模式，玩家在战斗中不需要手动干涉。由于网页游戏的特性，尘埃的所有战斗过程全部在服务端完成，玩家是无法看到整个过程的。这就意味着需要在服务端生成一个完整的战斗记录，玩家要看到战斗过程就必须将记录传递到前端的战斗记录播放器中进行回放。&lt;/p&gt;
&lt;p&gt;回合制大大的简化了战斗模式，同时也简化的战斗记录数据的结构。尘埃暂时还没有考虑各种复杂的装备和技能特效，在 Demo 中直接采用了最简单的处理方法，将战斗记录分为两部分：战斗成员（包括攻击和防御两方）以及回合数据。战斗成员就是参战双方的详细属性，比如名称、血量等，而回合数据是简化后的操作步骤。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;0: {status:{attacker:[{id:2, name:勇敢的小鬼, hp:30, attack:3, defence:2,…}],…}}
1: {type:battle, data:[attacker, 0, 0, 0, 3, 7]}
2: {type:battle, data:[defender, 0, 0, 0, 1, 29]}
3: {type:battle, data:[attacker, 0, 0, 0, 3, 4]}
4: {type:battle, data:[defender, 0, 0, 0, 1, 28]}
5: {type:battle, data:[attacker, 0, 0, 0, 3, 1]}
6: {type:battle, data:[defender, 0, 0, 0, 1, 27]}
7: {type:battle, data:[attacker, 0, 0, 0, 3, -2]}
8: {type:message, data:勇敢的小鬼打败了老鼠。}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上面是一个简单的战斗记录示例，第 0 行是参战成员的详细信息，其中分为攻击方和防御方两个部分。第 1-7 行就是整个战斗的操作数据。整个战斗记录的回放过程可以点击图片查看：&lt;a href=&quot;http://ww2.sinaimg.cn/large/86e701f8gw1ejtkyk2521j20za0hm0v9.jpg&quot;&gt;战斗记录&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;战斗记录的回放基本都在前端进行控制，目前尘埃 Demo 的战斗回放采用的是 2 秒一个回合，当然如果有需要的话也可以把整个过程直接打印出来。不过随着之后各种战斗因素的加入，这个过程肯定会变得复杂起来。 &lt;/p&gt;]]></summary>
	</entry>
	<entry>
		<title type="html"><![CDATA[尘埃开发记录之战斗模式]]></title>
		<link href="http://blog.minimee.org/article/2014/08/26/battle-mode-of-dust" />
		<id>urn:uuid:400576b2-8058-e801-ab80-91df1ad9aac7</id>
		<updated>2014-08-26T12:57:21+08:00</updated>
		<summary type="html"><![CDATA[&lt;p&gt;尘埃的地图设定差不多已经确定，现在需要考虑的是战斗模式。通常游戏中的战斗以技能和装备为核心，游戏中的技能大都是以职业或者门派为区分，这部分相对固定，差距多由玩家操作决定。但是装备差别更大，强力的装备对玩家的吸引力更加强烈。&lt;/p&gt;
&lt;p&gt;在炉石传说和 estiah 这样的卡牌游戏中则是以五花八门的卡牌为核心，玩家之间的伤害差别全由卡牌属性决定。尘埃作为休闲的网页游戏，在 PVE 或 PVP 中自然希望弱化“操作”的作用，让战斗更加自动一些，所以我自己更加倾向于采用类似 estiah 和 linodas 的战斗模式，也就是说希望玩家的大部分游戏时间都花在战斗前的各种“装备”或“卡牌”的收集上。&lt;/p&gt;
&lt;p&gt;由于自动战斗的特殊性，采用回合制就无可避免，但是仍然可以通过一些特别的设定来增加战斗的策略性。目前实现了一个非常简陋的战斗系统以及前端的战斗记录播放器，之后会依据该系统不断增加与其相关的系统设定，比如技能，装备系统。&lt;/p&gt;]]></summary>
	</entry>
	<entry>
		<title type="html"><![CDATA[尘埃开发记录之地图设定]]></title>
		<link href="http://blog.minimee.org/article/2014/08/16/game-map" />
		<id>urn:uuid:f737dd8c-91e5-cc30-39b1-c00bca1311ba</id>
		<updated>2014-08-16T19:04:34+08:00</updated>
		<summary type="html"><![CDATA[&lt;p&gt;经过思考决定修改之前 Demo 中地图的一些相关设定。按照之前的设定，人物可以在地图中自由移动，地图属性的颗粒也相对较小（比如距离、类型）。这样设定的好处是可以让角色移动更加接近普通 RPG 中移动效果，服务器也可绘制更加精细的地图。但是从 Demo 的效果来看，这种实现体验并不好。脱离了地图的直观感受，玩家需要强制记忆地图坐标，完成一个简单任务也可能需要通过数次移动，更容易疲倦。&lt;/p&gt;
&lt;p&gt;我的目标是做一个休闲的文字页游，尽可能的缩减鼠标操作也是需求之一。为了减少角色移动带来的操作，需要放大地图格子的比例。在 Linodas 中地图是以城镇为中心的，如果一个城镇相当于一个格子的话，它的地图只有13格，也就是说角色不是在地城副本就是在城市中。我希望游戏中的世界能够更加“宽阔”一些，角色不仅仅是在城市中，也可以是在草原或者山谷。我把放大后的地图格子叫做“场景”，每一个格子就是一个场景。角色仍然可以在地图中移动，但是由于地图比例的放大，也会增加一些额外的东西来作为移动条件，比如食物和水。&lt;/p&gt;
&lt;p&gt;当然，在每个场景中可以采用 Linodas 中地城相似的设定，通过增加不同的子场景来让场景内容更加丰富。这部分需要在新的 demo 做出来之后再继续讨论。&lt;/p&gt;]]></summary>
	</entry>
	<entry>
		<title type="html"><![CDATA[尘埃开发记录]]></title>
		<link href="http://blog.minimee.org/article/2014/08/16/how-to-make-a-web-game" />
		<id>urn:uuid:5f7f2f3a-e292-79d7-8ba0-2f713b106151</id>
		<updated>2014-08-16T09:53:34+08:00</updated>
		<summary type="html"><![CDATA[&lt;p&gt;题目中的话是疑问句。我最近在想怎么做一个网页游戏，但是由于从未涉及过相关知识，这个过程对我来说有些陌生。&lt;/p&gt;
&lt;p&gt;开发网页游戏的技术有很多种，最成熟的当属 flash 游戏，而当前热门的则应该是 HTML 5 以及 Unity 3D。从画面来说，现在的网页游戏已经可以媲美端游了。不过我的兴趣点却恰恰相反，我更喜欢 &lt;a href=&quot;http://candybox2.net/&quot;&gt;Candy box&lt;/a&gt; 以及 &lt;a href=&quot;http://www.linodas.com/&quot;&gt;Linodas&lt;/a&gt; 类似的文字游戏。&lt;/p&gt;
&lt;p&gt;Candy box 好玩但由于是单机内容不够丰富，而 Linodas 内容丰富但行动点的设定很大程度上抑制了玩家的热情。这其中涉及到了游戏对于玩家之间的平衡问题。我希望有这样一款文字页游，游戏背景是不断变化的，可以持续性的玩下去，玩家之间可以有一定的交互，但是在线时长不会造成玩家之间的根本性的差距。换种方式说就是我一直当单机玩也可以体验绝大部分游戏乐趣，每天只用很少的时间来玩也不会被其他玩家碾压。&lt;/p&gt;
&lt;p&gt;Linodas 的冒险模式应该就是在往这个方向努力，但是这个功能目前还未开放，每天把少量的行动点数用完就不能做其他事情了。所以我准备给自己写一个页游，尽可能的满足自己的需求。&lt;/p&gt;
&lt;p&gt;新页游暂被设定为生存类，玩家随机出生在地图的某个位置，然后通过采集或猎杀来获取资源，不断制造工具，让自己活下去。这是一个很普通的生存类游戏设定，但是实现方式上还需要仔细的考虑。之前参考常规方式实现了一下&lt;a href=&quot;http://justadust.sinaapp.com/game&quot;&gt;地图 demo&lt;/a&gt;，但是不管是在移动操作还是体验上都比较差，频繁的点击以及过快的移动很容易迷失方向。&lt;/p&gt;]]></summary>
	</entry>
	<entry>
		<title type="html"><![CDATA[谁动了我的 php.vim]]></title>
		<link href="http://blog.minimee.org/article/2014/03/23/who-changed-my-php-vim" />
		<id>urn:uuid:b8e64e6b-7392-1cd8-4df6-3e7d2abb1fda</id>
		<updated>2014-03-23T17:59:17+08:00</updated>
		<summary type="html"><![CDATA[&lt;p&gt;最近发生了一个非常诡异的事情，我的 vim 语法高亮竟然自动变了！在&lt;a href=&quot;http://blog.minimee.org/article/2014/03/20/the-problem-of-vim-css-color&quot;&gt;前一篇博客&lt;/a&gt;中我提到过：从我使用 vim 编辑器以来，color scheme 一直都是 &lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=2536&quot;&gt;lucius&lt;/a&gt;。它之前的模样可以在&lt;a href=&quot;http://minimee.org/vim/&quot;&gt;这篇介绍&lt;/a&gt;中看到。&lt;/p&gt;
&lt;p&gt;从图片中可以看到 php 注释要比 php 普通代码的颜色要暗很多，不会吸引到视觉焦点，这也是我选择 color scheme 最重要的标准之一。但是最近它竟然自己把颜色给换了，难道注释也变得不甘寂寞了么？&lt;/p&gt;
&lt;p&gt;&amp;lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;从&lt;a href=&quot;http://ww1.sinaimg.cn/large/86e701f8gw1eepv20rot2j21ao07xdgn.jpg&quot;&gt;这张图片&lt;/a&gt;可以看到，注释中部分文字改变了高亮颜色！奇怪的是最近我并没有任何更新 vim 的操作，我也不知道为什么变成了这样。在更换了多个 color scheme 之后发现，这个问题影响到了所有的 color scheme，也就是说问题与 color scheme 自身没有关系。而是 vim highlight groups 中混入了奇怪的东西。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-vimL&quot;&gt;hi Comment          guifg=#808080           gui=none
hi Comment          ctermfg=243             cterm=none&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这几行代码是 lucius 配色中关于注释的颜色设置，现在我需要找到混在 Comment group 中的其他 group。这时可以祭出 &lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=383&quot;&gt;SyntaxAttr.vim&lt;/a&gt; 这件大杀器，它的功能很简单，就是可以获取鼠标所在文字的 highlight group 信息。插件安装成功之后可以使用以下命令来获取 highlight group 信息：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-vimL&quot;&gt;:call SyntaxAttr()&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;利用这个插件我找到了注释中高亮部分的 highlight group：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-vimL&quot;&gt;group: phpDocTags-&amp;gt;PreProc guifg=#efefaf(#efefaf)
group: phpDocCustomTags-&amp;gt;Type guifg=#93e690(#93e690)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;很显然，在 lucius scheme 之中并没有定义与这两个 group 相关的设置，关于这两个 group 的定义可以在 vim 的 syntax/php.vim 中找到：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;syntax match  phpDocCustomTags  &quot;@[a-zA-Z]*\(\s\+\|\n\|\r\)&quot; containedin=phpComment
syntax region phpDocTags  start=&quot;{@\(example...\|tutorial\)&quot; end=&quot;}&quot; containedin=phpComment
syntax match  phpDocTags  &quot;@\(abstract\....\|throws\)\(\s\+\)\?&quot; containedin=phpComment&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;最后为了让这两个不安分的 highlight group 低调一点，我直接在 lucius scheme 中添加了如下两行设置：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;hi phpDocTags       guifg=#808080                                   gui=none
hi phpDocCustomTags guifg=#808080                                   gui=none&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后整个 vim 又恢复到之前的宁静了。&lt;/p&gt;]]></summary>
	</entry>
</feed>